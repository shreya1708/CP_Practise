/*top down approach*/
import java.util.*;
public class MatrixTBottomUp {
	public static int dp[][]=new int[10][10];
	public static int count=0;
	public static void main(String[] args)
	{
		Scanner sc=new Scanner(System.in);
		
		int mat[][]= {
				{1,1,1},
				{1,1,1},
				{1,1,1},
				{1,1,1},
				{1,1,1},
				{1,1,1},
				{1,1,1}};
		
		MatrixTraversal(mat);
	}
	public static void MatrixTraversal(int mat[][])
	{
		int i=0;
		int j=0;
		int r=mat.length;
		int c=mat[0].length;
		
		
		int y=helper(mat,i,j,r,c);
		System.out.println(y);
		
	}
	public static int helper(int mat[][],int i,int j,int r,int c)
	{
		if(i==r-1&&j==c-1)
		{
			return 1;
		}
		if(i>=r||j>=c)
		{
			return 0;
		}
		if(i==r-1||j==c-1)
		{
			return 1;
		}
		if(dp[i][j]!=0)
		{
			return dp[i][j];
		}
		
         dp[i][j]=helper(mat,i,j+1,r,c)+helper(mat,i+1,j,r,c);
	
		
		return dp[i][j];
	}

}
